##### Basic Paths #####

# Path to Arduino installation.
ARDUINOPATH := /usr/share/arduino

# Path to arm-none-eabi.
COMPILERPATH := $(ARDUINOPATH)/hardware/tools/arm/bin

# Path to Nano PB for protobuffer compilation.
NANOPB := /home/bor/lib/nanopb

GO_PROJECT := github.com/dibrov4bor/teensymk

.PHONY: all
all: main.hex
	go install $(GO_PROJECT)/pc-autogen/proto $(GO_PROJECT)/pc

CC := $(COMPILERPATH)/arm-none-eabi-gcc
CXX := $(COMPILERPATH)/arm-none-eabi-g++
OBJCOPY := $(COMPILERPATH)/arm-none-eabi-objcopy
SIZE := $(COMPILERPATH)/arm-none-eabi-size

##### Compilation Flags #####

TEENSYDUINO := $(ARDUINOPATH)/hardware/teensy/avr/cores/teensy3
TEENSYTOOLS := $(ARDUINOPATH)/hardware/tools

# Compiler options for C and C++.
CPPFLAGS := -Wall -g -Os -mcpu=cortex-m4 -mthumb -nostdlib -MMD -DF_CPU=48000000 -DUSB_SERIAL -DLAYOUT_US_ENGLISH -fdata-sections -ffunction-sections

# Options needed by many Arduino libraries to configure for Teensy 3.0.
CPPFLAGS += -D__MK20DX256__ -DARDUINO=10600 -DTEENSYDUINO=121

# Include Teensy3, NanoPB headers and proto path.
CPPFLAGS += -I$(TEENSYDUINO) -I$(NANOPB) -I$(abspath proto)

# Compiler options for C++ only.
CXXFLAGS := -std=gnu++0x -felide-constructors -fno-exceptions -fno-rtti

##### Autogenerated Protobuf files #####

PROTOFILES := $(wildcard proto/*.proto)
# Autogenerated protobuf files.
GENFILES := $(PROTOFILES:.proto=.pb.c) $(PROTOFILES:.proto=.pb.h)

# flock is used to prevent simultaneous protobuf compilation in parallel.
$(GENFILES): $(PROTOFILES)
	mkdir -p pc-autogen/
	flock . -c "protoc --plugin=$(NANOPB)/generator/protoc-gen-nanopb --nanopb_out=. --go_out=pc-autogen $^"

##### Compilation #####

C_FILES := $(wildcard kernel/*.c) $(PROTOFILES:.proto=.pb.c) $(wildcard $(TEENSYDUINO)/*.c) $(wildcard $(NANOPB)/*.c)
CC_FILES := $(wildcard kernel/*.cc) $(wildcard proto/*.cc)
CPP_FILES := $(wildcard $(TEENSYDUINO)/*.cpp)
OBJS := $(C_FILES:.c=.o) $(CC_FILES:.cc=.o) $(CPP_FILES:.cpp=.o)

# Source objects are dependent on autogenerated files.
$(OBJS): $(GENFILES)

##### Linking #####

LDFLAGS := -Os -Wl,--gc-sections,--defsym=__rtc_localtime=0 --specs=nano.specs -mcpu=cortex-m4 -mthumb -T$(TEENSYDUINO)/mk20dx256.ld -lm

# Compiler generated dependency info.
-include $(OBJS:.o=.d)

main.elf: $(OBJS)
	$(CXX) $(LDFLAGS) -o $@ $^

main.hex: main.elf
	$(SIZE) $<
	$(OBJCOPY) -O ihex -R .eeprom $< $@

.PHONY: upload
upload: main.hex
	$(TEENSYTOOLS)/teensy_post_compile -file=$(basename $<) -path=$(shell pwd) -tools=$(TEENSYTOOLS)
	-$(TEENSYTOOLS)/teensy_reboot

.PHONY: clean
clean:
	-@rm -rf proto/*.o proto/*.pb.h proto/*.pb.c proto/*.pb.d proto/*.pb.go kernel/*.o kernel/*.d $(TEENSYDUINO)/*.o $(TEENSYDUINO)/*.d $(NANOPB)/*.o $(NANOPB)/*.d main.elf main.hex kernel-autogen/ kernel-build/ pc-autogen/

.PHONY: size
size:
	$(SIZE) main.elf

